{"version":3,"sources":["services/persons.js","components/Filter.js","components/NewPerson.js","components/PhoneBook.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","doNothing","event","preventDefault","Filter","newFilter","filterNames","onSubmit","value","onChange","NewPerson","addEntry","newName","handleNewName","newNumber","handleNewNumber","type","PhoneBook","persons","removeEntry","filterUpperCase","toUpperCase","filter","person","name","includes","map","number","onClick","styles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","fail","Notification","message","className","style","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notification","setNotification","setSuccess","useEffect","getPersons","personsService","catch","error","showMessage","successNotification","setTimeout","target","entryObject","some","e","personId","find","item","updatedEntry","Object","assign","window","confirm","n","returnedPerson","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.598d26fb.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Filter = (newFilter, filterNames) => \r\n\r\n<form onSubmit={doNothing}>\r\n    Filter shown with: \r\n    <input value={newFilter} onChange={filterNames}/>\r\n</form>\r\n\r\nconst doNothing = (event) => event.preventDefault()\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst NewPerson = (addEntry, newName, handleNewName, newNumber, handleNewNumber) => {\r\n      \r\n      return  <>\r\n        <form onSubmit={addEntry}>\r\n        <div>name: <input value={newName}\r\n        onChange={handleNewName} />\r\n        </div>\r\n        <div>number: <input value={newNumber}\r\n        onChange={handleNewNumber} />\r\n        </div>\r\n        <div><button type=\"submit\">Add</button></div>\r\n        </form>\r\n      </>\r\n  }\r\n\r\n  export default NewPerson","import React from 'react'\r\n\r\nconst PhoneBook = (persons, newFilter, removeEntry) => {\r\n    let filterUpperCase = newFilter.toUpperCase()\r\n    let newArray = persons.filter((person)=>{\r\n      let personInUpperCase = person.name.toUpperCase()\r\n      return personInUpperCase.includes(filterUpperCase)\r\n    })\r\n    return newArray.map(person => \r\n      <div key={person.name}>{person.name} {person.number}<button onClick={() => removeEntry(person)}>delete</button>\r\n      </div>)\r\n  }\r\n\r\n  export default PhoneBook","import React from 'react'\r\n\r\nconst Notification = (message, success) => {\r\n\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (success)\r\n    return (\r\n      <div className=\"success\" style={styles.success}>\r\n        {message}\r\n      </div>\r\n    )\r\n  else\r\n    return (\r\n      <div className=\"success\" style={styles.fail}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n  \r\n\r\n\r\nvar styles = ({\r\n    success: {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n\r\n    },\r\n    fail: {\r\n      color: 'red',\r\n      background: 'lightgrey',\r\n      fontSize: 20,\r\n      borderStyle: 'solid',\r\n      borderRadius: 5,\r\n      padding: 10,\r\n      marginBottom: 10,\r\n\r\n  },\r\n  })\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Filter from './components/Filter'\nimport NewPerson from './components/NewPerson'\nimport PhoneBook from './components/PhoneBook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ success, setSuccess] = useState(null)\n\n  useEffect(() => {\n    getPersons()\n  }, [])\n\n\n  const getPersons = () => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n      .catch(error => showMessage(\"Data search unsuccesful\", false ))\n  }\n\n\n\n  const addEntry = (event) => {\n    event.preventDefault()\n    const entryObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some(e => e.name === newName)) {\n\n      let personId = persons.find(item => item.name === newName)\n    \n      let updatedEntry = Object.assign(personId, entryObject)\n\n      if (window.confirm(`Do you want to update ${newName} with number ${newNumber}?`)) {\n        personsService\n        .update(personId.id, entryObject)\n          .then( () => {\n            setPersons(persons.map(item => (item.name === newName) ? updatedEntry : item))\n            setNewName('')\n            setNewNumber('')\n            showMessage(`User ${newName} phone number has been updated`)\n          })\n          .catch(error => {\n            showMessage(`Update unsuccesful. User ${newName} has already been removed from the phonebook.`, false)\n            setPersons(persons.filter(n => n.name !== newName))\n          })\n           \n      }\n    }\n    \n    else {\n\n      if (persons.some(e => e.number === newNumber)){\n        showMessage(`Number ${newNumber} has already been added to the phonebook .`, false)\n      }  \n      else {\n\n        if (newName === \"\" || newNumber === \"\") {\n          showMessage(`Name and number cannot be empty`, false)\n        }\n        else {\n          personsService\n          .create(entryObject)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              showMessage(`User ${newName} has already been added to the phonbook`)\n          })\n            .catch(error => {\n              return showMessage(`Adding number unsuccesful. More info about error: ${error.response.data.error}`, false)}  )\n            getPersons()\n        }\n      }\n    }\n     \n  }\n\n  const removeEntry = (person) => {\n    if (window.confirm(`Remove ${person.name}?`)) { \n      personsService\n      .remove(person.id)\n        .then( () => {\n          setPersons(persons.filter(item => item.id !== person.id ))\n          showMessage(`User ${person.name} has already been deleted from the Phonebook`)\n        })\n      .catch(error => {\n          showMessage(`Deleting unsuccesful. User ${person.name} has already been deleted from the Phonebook.`, false)\n          console.log(\"id already removed (or other problem)\")\n          getPersons()\n        })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)  \n  }\n\n  const handleNewNumber= (event) => {\n    setNewNumber(event.target.value)  \n  }\n\n  const filterNames = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const showMessage = (message, successNotification=true) => {\n    setNotification(message)\n    setSuccess(successNotification)\n    \n    setTimeout(() => {\n      setNotification(null)\n      setSuccess(null)\n    }, 8000)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <div>{Notification(notification, success)}</div>\n     {Filter(newFilter, filterNames)}\n      <h2>Add a new</h2>\n        {NewPerson(addEntry, newName, handleNewName, newNumber, handleNewNumber)}\n      <h2>Numbers</h2>\n        {PhoneBook(persons, newFilter, removeEntry)}\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}